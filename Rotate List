# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head:
            return None
        
        if not head.next:
            return head
        
        oldTail = head
        n = 1
        
        while oldTail.next:
            oldTail =  oldTail.next
            n += 1
        oldTail.next = head
        
        newTail = head
        for i in range(n - k % n - 1):
            newTail = newTail.next
        newHead = newTail.next
        
        newTail.next = None
        
        return newHead
