# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        cur1, cur2 = l1, l2
        n1, n2 = 0, 0
        while cur1:
            n1 += 1
            cur1 = cur1.next
        while cur2:
            n2 += 1
            cur2 = cur2.next
            
        cur1, cur2 = l1, l2
        head = None
        while n1 > 0 and n2 > 0:
            val = 0
            if n1 >= n2:
                val += cur1.val
                n1 -= 1
                cur1 = cur1.next
            if n1 < n2:
                val += cur2.val
                n2 -= 1
                cur2 = cur2.next
            
            cur = ListNode(val)
            cur.next = head
            head = cur
        
        curr1, head = head, None
        carry = 0
        while curr1:
            val = (curr1.val + carry) % 10
            carry = (curr1.val + carry) // 10
            
            curr = ListNode(val)
            curr.next = head
            head = curr
            curr1 = curr1.next
            
        if carry:
            curr = ListNode(carry)
            curr.next = head
            head = curr
        
        return head
